classdef AutoTrackSettingsController < handle
  
  properties
    catalyticController  % the parent CatalyticController
    
    % GUI handles
    fig  % the settings figure
    mainAxes
    threshtext
    upthresh
    threshdown
    lighterthanbgmenu
    donebutton
    debugbutton
    fixbgpanel
    text4
    bgcolorax
    eyedropperRadiobutton
    fillbutton
    radiustext
    radiusbuttonplus
    radiusminusbutton
    
    choosepatch
    % buttondownfcn
    im  % the image
    nr  % number of rows
    nc  % number of cols
    r0  % the lowest-index row of the ROI
    r1  % the highest-index row of the ROI
    c0  % the lowest-index col of the ROI
    c1  % the highest-index col of the ROI
    him
    hchoose
    choosepatchpt1
    choosepatchpt2
  end  % properties
  
  methods
    % --- Executes just before retrack_settings_export is made visible.
    function self=AutoTrackSettingsController(catalyticController)
      self.layout();
      self.catalyticController = catalyticController;
      
      % set defaults
      set(self.eyedropperRadiobutton,'value',0);
      axes(self.bgcolorax);
      self.catalyticController.setCurrentBackgroundImageToPersistent();
      set(self.threshtext,'string',sprintf('Threshold: %.1f',self.catalyticController.getBackgroundThreshold()));
      lighterthanbg=self.catalyticController.getForegroundSign();
      if lighterthanbg == 1,
        set(self.lighterthanbgmenu,'value',1);
      elseif lighterthanbg == -1,
        set(self.lighterthanbgmenu,'value',2);
      else
        set(self.lighterthanbgmenu,'value',3);
      end
      set(self.radiustext,'string',sprintf('Track Radius: %.1f px',self.catalyticController.getMaximumJump()));
      
      self.choosepatch = false;
      % self.buttondownfcn = get(self.mainAxes,'buttondownfcn');
      
      self.showCurrentFrame();
      
      bgcolor=self.catalyticController.getBackgroundColor();
      if isempty(bgcolor) || isnan(bgcolor) ,
        self.catalyticController.setBackgroundColor(median(self.im(:)));
      end
      axes(self.bgcolorax);
      image(repmat(uint8(self.catalyticController.getBackgroundColor()),[1,1,3]));
      axis off;      
    end
    
    
    % ---------------------------------------------------------------------
    function showCurrentFrame(self)
      
      flies = self.catalyticController.getAutoTrackFly();
      f = self.catalyticController.getAutoTrackFrame();
      [isfore,dfore,xpred,ypred,thetapred,self.r0,self.r1,self.c0,self.c1,self.im] = ...
        self.catalyticController.backgroundSubtraction(flies,f);  %#ok
      self.nr = self.r1-self.r0+1;
      self.nc = self.c1-self.c0+1;
      axes(self.mainAxes);
      hold off;
      self.him = imagesc(self.im);
      set(self.him,'buttondownfcn',@(hObject,eventdata)self.mouseButtonDownInMainAxes(hObject,eventdata));
      
      axis image;
      colormap gray;
      hold on;
      bw = bwperim(isfore);
      [r,c] = find(bw);
      plot(c,r,'r.','hittest','off');
      
      if ~isempty(self.choosepatchpt1) && ~isempty(self.choosepatchpt2)
        self.hchoose = plot(...
          [self.choosepatchpt1(1),self.choosepatchpt1(1),...
          self.choosepatchpt2(1),self.choosepatchpt2(1),self.choosepatchpt1(1)],...
          [self.choosepatchpt1(2),self.choosepatchpt2(2),...
          self.choosepatchpt2(2),self.choosepatchpt1(2),self.choosepatchpt1(2)],'g');
      end
    end
    
    
    % --- Executes on button press in upthresh.
    function upthreshTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to upthresh (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      self.catalyticController.incrementBackgroundThreshold(0.1);
      set(self.threshtext,'string',sprintf('Threshold: %.1f',self.catalyticController.getBackgroundThreshold()));
      self.showCurrentFrame();
      % guidata(hObject,self);
    end
    
    
    % --- Executes on button press in threshdown.
    function threshdownTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to threshdown (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      self.catalyticController.incrementBackgroundThreshold(-0.1);
      %self.catalyticController.bgthresh = self.catalyticController.bgthresh - .1;
      set(self.threshtext,'string',sprintf('Threshold: %.1f',self.catalyticController.getBackgroundThreshold()));
      self.showCurrentFrame();
      % guidata(hObject,self);
    end
    
    
    
    % --- Executes on selection change in lighterthanbgmenu.
    function lighterthanbgmenuTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to lighterthanbgmenu (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      % Hints: contents = get(hObject,'String') returns lighterthanbgmenu contents as cell array
      %        contents{get(hObject,'Value')} returns selected item from lighterthanbgmenu
      
      v = get(hObject,'value');
      lighterthanbg=self.catalyticController.getForegroundSign();
      if v == 1
        
        if lighterthanbg == 1
          return;
        end
        self.catalyticController.setForegroundSign(1);
        self.showCurrentFrame();
        
      elseif v == 2
        
        if lighterthanbg == -1
          return;
        end
        self.catalyticController.setForegroundSign(-1);
        self.showCurrentFrame();
        
      else
        
        if lighterthanbg == 0
          return;
        end
        self.catalyticController.setForegroundSign(0);
        self.showCurrentFrame();
        
      end
      % guidata(hObject,self);
    end
    
    
    
    % --- Executes on button press in donebutton.
    function donebuttonTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to donebutton (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      self.closeRequested();
    end
    
    
    
    % --- Executes on button press in eyedropperRadiobutton.
    function eyedropperRadiobuttonTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to eyedropperRadiobutton (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      % Hint: get(hObject,'Value') returns toggle state of eyedropperRadiobutton
    end
    
    
    
    % --- Executes on mouse press over axes background.
    function mouseButtonDownInMainAxes(self, hObject, eventdata)  %#ok
      % hObject    handle to mainAxes (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      %fprintf('Entered mouseButtonDownInMainAxes()\n');
      pt = get(self.mainAxes,'currentpoint');
      x = min(max(1,round(pt(1,1))),self.nc);
      y = min(max(1,round(pt(1,2))),self.nr);
      
      if get(self.eyedropperRadiobutton,'Value')
        
        self.catalyticController.setBackgroundColor(self.im(y,x));
        axes(self.bgcolorax);
        image(repmat(uint8(self.catalyticController.getBackgroundColor()),[1,1,3]));
        axis off;
        
      else
        
        if ~isempty(self.hchoose) && ishandle(self.hchoose)
          delete(self.hchoose);
        end
        self.choosepatchpt1 = [x,y];
        self.hchoose = plot([x,x,x,x,x],[y,y,y,y,y],'g');
        self.choosepatch = true;
        
      end
      
      % guidata(hObject,self);
    end
    
    
    % --- Executes on button press in debugbutton.
    function debugbuttonTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to debugbutton (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      keyboard;
    end
    
    
    % --- Executes on button press in fillbutton.
    function fillbuttonTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to fillbutton (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      if isempty(self.choosepatchpt1) || isempty(self.choosepatchpt2)
        msgbox('Drag a rectangle to select a patch to fill');
        return;
      end
      
      r0 = min(self.choosepatchpt1(2),self.choosepatchpt2(2));
      r1 = max(self.choosepatchpt1(2),self.choosepatchpt2(2));
      c0 = min(self.choosepatchpt1(1),self.choosepatchpt2(1));
      c1 = max(self.choosepatchpt1(1),self.choosepatchpt2(1));
      r0 = max(round(r0+self.r0-1),1);
      r1 = min(round(r1+self.r0-1),self.catalyticController.getNRows());
      c0 = max(round(c0+self.c0-1),1);
      c1 = min(round(c1+self.c0-1),self.catalyticController.getNCols());
      bgcurr=self.catalyticController.getPersistentBackgroundImage();
      bgcurr(r0:r1,c0:c1) = self.catalyticController.getBackgroundColor();
      self.catalyticController.setCurrentBackgroundImage(bgcurr);
      
      self.showCurrentFrame();
      % guidata(hObject,self);
    end
    
    
    
    % --- Executes on mouse motion over figure - except title and menu.
    function mouseMoved(self,hObject,eventdata)  %#ok
      % hObject    handle to fig (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      %if isfield(self,'choosepatch') || ~self.choosepatch
      %fprintf('Entered mouseMoved()\n');
      if isempty(self.choosepatch) || ~self.choosepatch
        return
      end
      %fprintf('Entered mouseMoved() inner sanctum\n');
      
      pt = get(self.mainAxes,'currentpoint');
      x = pt(1,1);
      y = pt(1,2);
      if x < 1 || x > self.nc || y > self.nr || y < 1
        return;
      end
      x = min(max(1,round(x)),self.nc);
      y = min(max(1,round(y)),self.nr);
      
      self.choosepatchpt2 = [x,y];
      set(self.hchoose,...
        'xdata',[self.choosepatchpt1(1),self.choosepatchpt1(1),x,x,self.choosepatchpt1(1)],...
        'ydata',[self.choosepatchpt1(2),y,y,self.choosepatchpt1(2),self.choosepatchpt1(2)]);
      
      % guidata(hObject,self);
    end
    
    
    % --- Executes on mouse press over figure background, over a disabled or
    % --- inactive control, or over an axes background.
    function mouseButtonReleased(self,hObject,eventdata)  %#ok
      % hObject    handle to fig (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      self.choosepatch = false;
      % guidata(hObject,self);
    end
    
    
    
    % --- Executes on button press in radiusplusbutton.
    function radiusplusbuttonTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to radiusplusbutton (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      self.catalyticController.incrementMaximumJump(+1);
      set(self.radiustext,'string',sprintf('Track Radius: %.1f px',self.catalyticController.getMaximumJump()));
      self.showCurrentFrame();
      % guidata(hObject,self);
    end
    
    
    
    % --- Executes on button press in radiusminusbutton.
    function radiusminusbuttonTwiddled(self, hObject, eventdata)  %#ok
      % hObject    handle to radiusminusbutton (see GCBO)
      % eventdata  reserved - to be defined in a future version of MATLAB
      % self    structure with self and user data (see GUIDATA)
      
      self.catalyticController.incrementMaximumJump(-1);
      set(self.radiustext,'string',sprintf('Track Radius: %.1f px',self.catalyticController.getMaximumJump()));
      self.showCurrentFrame();
      % guidata(hObject,self);
    end
    
    
    
    % --- Executes when user attempts to close fig.
    function closeRequested(self)
      delete(self.fig);
    end
    
    
    
    % --- Creates and returns a handle to the GUI figure.
    function layout(self)      
      self.fig = figure(...
        'Units','characters',...
        'CloseRequestFcn',@(hObject,eventdata)self.closeRequested(),...
        'Color',[0.929411764705882 0.929411764705882 0.929411764705882],...
        'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
        'IntegerHandle','off',...
        'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
        'MenuBar','none',...
        'Name','Auto-track Settings',...
        'NumberTitle','off',...
        'PaperPosition',get(0,'defaultfigurePaperPosition'),...
        'Position',[103.666666666667 30.8333333333333 111.5 30.75],...
        'Resize','off',...
        'ToolBar','figure',...
        'WindowButtonMotionFcn',@(hObject,eventdata)self.mouseMoved(hObject,eventdata),...
        'WindowButtonUpFcn',@(hObject,eventdata)self.mouseButtonReleased(hObject,eventdata),...
        'HandleVisibility','callback',...
        'WindowStyle','modal', ...
        'UserData',[],...
        'Tag','fig',...
        'Visible','on');
      
      self.mainAxes = axes(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Position',[2.5 1.58333333333333 64.5 28.25],...
        'CameraPosition',[0.5 0.5 9.16025403784439],...
        'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
        'Color',get(0,'defaultaxesColor'),...
        'ColorOrder',get(0,'defaultaxesColorOrder'),...
        'FontSize',12.5,...
        'LooseInset',[14.56 3.55666666666667 10.64 2.425],...
        'XColor',get(0,'defaultaxesXColor'),...
        'YColor',get(0,'defaultaxesYColor'),...
        'ZColor',get(0,'defaultaxesZColor'),...
        'ButtonDownFcn',@(hObject,eventdata)@(hObject,eventdata)self.mouseButtonDownInMainAxes(hObject,eventdata),...
        'Tag','mainAxes');
      
      self.threshtext = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'FontSize',12.5,...
        'HorizontalAlignment','left',...
        'Position',[71.5 11.3076923076923 16 1.30769230769231],...
        'String','Threshold: 0',...
        'Style','text',...
        'Tag','threshtext');
      
      self.upthresh = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.upthreshTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[89.3333333333333 11.3076923076923 3.5 1.92307692307692],...
        'String','+',...
        'Tag','upthresh');
      
      self.threshdown = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.threshdownTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[93.6666666666667 11.3076923076923 3.5 1.92307692307692],...
        'String','-',...
        'Tag','threshdown');
      
      self.lighterthanbgmenu = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.lighterthanbgmenuTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[71.1666666666667 8.23076923076925 36.3333333333333 2.15384615384615],...
        'String',{  'Light flies on dark background'; 'Dark flies on light background'; 'Other' },...
        'Style','popupmenu',...
        'Value',1,...
        'Tag','lighterthanbgmenu');
      
      self.donebutton = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.donebuttonTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[83.3333333333333 1.15384615384615 15 1.92307692307692],...
        'String','Done',...
        'Tag','donebutton');
      
      self.debugbutton = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.debugbuttonTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[83.1666666666667 4.30769230769231 15.5 2.23076923076923],...
        'String','Debug',...
        'Tag','debugbutton');
      
      self.fixbgpanel = uipanel(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'FontSize',12.5,...
        'Title','Fix Background',...
        'Tag','fixbgpanel',...
        'UserData',[],...
        'Clipping','on',...
        'Position',[67.6666666666667 16.3846153846154 41.1666666666667 12.9230769230769]);
      
      self.text4 = uicontrol(...
        'Parent',self.fixbgpanel,...
        'Units','characters',...
        'FontUnits','pixels',...
        'CData',[],...
        'FontSize',12.5,...
        'HorizontalAlignment','left',...
        'Position',[1.66666666666667 3.38461538461539 28.6666666666667 7.92307692307692],...
        'String',{  '1) To select a patch to fill, drag a rectangle.'; '2) To change the patch color, select using the eyedropper. '; '3) Click Fill.' },...
        'Style','text',...
        'UserData',[],...
        'Tag','text4');
      
      self.bgcolorax = axes(...
        'Parent',self.fixbgpanel,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Position',[31 5.30769230769231 8.66666666666667 4.23076923076923],...
        'CameraPosition',[0.5 0.5 9.16025403784439],...
        'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
        'Color',get(0,'defaultaxesColor'),...
        'ColorOrder',get(0,'defaultaxesColorOrder'),...
        'FontSize',12.5,...
        'LooseInset',[14.56 3.55666666666667 10.64 2.425],...
        'XColor',get(0,'defaultaxesXColor'),...
        'YColor',get(0,'defaultaxesYColor'),...
        'ZColor',get(0,'defaultaxesZColor'),...
        'Tag','bgcolorax');
            
      self.eyedropperRadiobutton = uicontrol(...
        'Parent',self.fixbgpanel,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.eyedropperRadiobuttonTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[21.3333333333333 1.30769230769231 19 1],...
        'String','Eyedropper',...
        'Style','radiobutton',...
        'Tag','eyedropperRadiobutton');
      
      self.fillbutton = uicontrol(...
        'Parent',self.fixbgpanel,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.fillbuttonTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[7 0.615384615384615 6.33333333333333 2.07692307692308],...
        'String','Fill',...
        'Tag','fillbutton');
      
      self.radiustext = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'FontSize',12.5,...
        'HorizontalAlignment','left',...
        'Position',[71.5 13.8461538461539 16.5 1],...
        'String','Track Radius: 50 px',...
        'Style','text',...
        'Tag','radiustext');
      
      self.radiusbuttonplus = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.radiusplusbuttonTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[89.1666666666667 13.4615384615385 3.5 1.92307692307692],...
        'String','+',...
        'Tag','radiusplusbutton');
      
      self.radiusminusbutton = uicontrol(...
        'Parent',self.fig,...
        'Units','characters',...
        'FontUnits','pixels',...
        'Callback',@(hObject,eventdata)self.radiusminusbuttonTwiddled(hObject,eventdata),...
        'FontSize',12.5,...
        'Position',[93.5 13.4615384615385 3.5 1.92307692307692],...
        'String','-',...
        'Tag','radiusminusbutton');
    end  % method
    
  end  % methods
  
end  % classdef



