function [hHandle, ahControls] = ...
  fnDrawTracker(hAxes, ...
                strctTracker, ...
                afCol, ...
                iLineWidth, ...
                bDrawShapeControl, ...
                bMainTracker)

% Based on Perona's code...
%
% Copyright (c) 2008 Shay Ohayon, California Institute of Technology.
% This file is a part of a free software. you can redistribute it and/or
% modify it under the terms of the GNU General Public License as published
% by the Free Software Foundation (see GPL.txt)

% Draws an ellipse+tail, and possibly other decorations, into axes hAxes.  
% strctTracker is a structure holding the ellipse dimensions and location.
% afCol is a 3x1 row vector specifying a color.
% iLineWidth is the line width to use, in points.
% bDrawShapeControl specifies whether to draw the points at the end of each
%   semi-major axis.
% bMainTracker, if false, causes only the ellipse to be drawn (not the
%   tail), and makes the ellipse be drawn as a dashed line.  (In this 
%   case, bDrawShapeControl is ignored.)  If bMainTracker is true (or not
%   given), things are drawn normally, with solid lines, tails, and with or
%   without shape controls based on bDrawShapeContol.
%
% hHandle is a vector of the HG handles of the ellipse and tail.
% ahControls is a vector of the HG handles of the shape controls, and is
%   empty if they are not drawn.

if nargin<6
  bMainTracker = true;
end
ahControls = [];

N = 60;
hHandle = [];
afTheta = linspace(0,2*pi,N);%2*pi*[0:N]/N;
apt2f = ...
  [strctTracker.m_fA * cos(afTheta); strctTracker.m_fB * sin(afTheta)];
R = [ cos(strctTracker.m_fTheta), sin(strctTracker.m_fTheta);
      -sin(strctTracker.m_fTheta), cos(strctTracker.m_fTheta)];
apt2fFinal = R*apt2f + repmat([strctTracker.m_fX;strctTracker.m_fY],1,N);
if bMainTracker
  strLineStyle = '-';
else
  strLineStyle = ':';
end
% hHandle = plot(hAxes, ...
%                apt2fFinal(1,:), ...
%                apt2fFinal(2,:), ...
%                'Color', afCol, ...
%                'LineWidth', iLineWidth, ...
%                'LineStyle', strLineStyle);
hHandle = line('parent',hAxes, ...
               'xdata',apt2fFinal(1,:), ...
               'ydata',apt2fFinal(2,:), ...
               'Color', afCol, ...
               'LineWidth', iLineWidth, ...
               'LineStyle', strLineStyle);

if bMainTracker
  a2fTail = R * [-2*strctTracker.m_fA,-strctTracker.m_fA;0,0];
  afTailX = ...
    [strctTracker.m_fX+a2fTail(1,1),strctTracker.m_fX+a2fTail(1,2)];
  afTailY = ...
    [strctTracker.m_fY+a2fTail(2,1),strctTracker.m_fY+a2fTail(2,2)];
  %hHandle = ...
  %  [hHandle; ...
  %   plot(afTailX, afTailY,'Parent',hAxes,'LineWidth',2,'Color',afCol)];
  tail_h=line('xdata',afTailX, ...
              'ydata',afTailY, ...
              'Parent',hAxes, ...
              'LineWidth',2, ...
              'Color',afCol);
  hHandle = [hHandle;tail_h];
  
  if bDrawShapeControl    
    afDiscX = 8*cos(afTheta);
    afDiscY = 8*sin(afTheta);
    ahControls(1,1) = ...
      patch(afDiscX+strctTracker.m_fX, ...
            afDiscY+strctTracker.m_fY, ...
            afCol, ...
            'Parent',hAxes, ...
            'EdgeColor','none', ...
            'UserData','Center');
    a2fPt = R * [strctTracker.m_fA,0,-strctTracker.m_fA,0;...
                 0,strctTracker.m_fB,0,-strctTracker.m_fB];
    afDiscX = 6*cos(afTheta);
    afDiscY = 6*sin(afTheta);
    
    for q=1:size(a2fPt,2)
      ahControls(q+1,1) = ...
        patch(strctTracker.m_fX+afDiscX+a2fPt(1,q), ...
              strctTracker.m_fY+afDiscY+a2fPt(2,q), ...
              0.6*afCol, ...
              'Parent',hAxes, ...
              'EdgeColor','none', ...
              'UserData','Major');
    end;
    
  end;
end;