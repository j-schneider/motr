function fnRunJobs(bRunLocal, ...
                   aiJobsToRun, ...
                   strJobFolderName, ...
                   strAppRootFolderName, ...
                   strJobarginBaseName)
                 
% Runs all the jobs, using information contained in the job files in 
% strJobFolderName.  These files should have names of the form
% <strJobarginBaseName>%d.mat.  The MouseTrackProj executable is assumed to
% be in the proper directory under strAppRootFolder.  Assuming the jobs run
% successfully, output is stored (where exactly?).  If bRunLocal is false, 
% a text file called "resubmit" is also placed in strJobFolderName, which
% gives the bash command that can be used to resubmit all jobs.

if bRunLocal
  % Run jobs locally.
  for iJobIter=1:length(aiJobsToRun)
    strJobInputFileName = ...
      fullfile(strJobFolderName, ...
               sprintf('Jobargin%d.mat',aiJobsToRun(iJobIter)));
    fnSubmitJobLocal(strJobInputFileName);
  end
else
  % Submit jobs to cluster.
  strSubmitScriptFileName = fullfile(strJobFolderName,'submitscript');
  fprintf('Generating submit script named %s\n', strSubmitScriptFileName);
  strExecutableFileNameAbs=fullfile(strAppRootFolderName, ...
                                    'Deploy', ...
                                    'MouseTrackProj', ...
                                    'src', ...
                                    'MouseTrackProj');
  strJobarginFileNameTemplate= ...
    fullfile(strJobFolderName, ...
             sprintf('%s${SGE_TASK_ID}.mat',strJobarginBaseName));
  hSubmitFileID = fopen(strSubmitScriptFileName,'w');
  fprintf(hSubmitFileID,'#!/bin/bash\n');
  fprintf(hSubmitFileID, ...
          '%s %s\n', ...
          strExecutableFileNameAbs, ...
          strJobarginFileNameTemplate);
  fclose(hSubmitFileID);
  system(['chmod 755 ',strSubmitScriptFileName]);
  fprintf('Submitting jobs\n');
  iNumJobs=length(aiJobsToRun);
  strCmd = ...
    sprintf('qsub -t 1-%d -N MouseJob -e %s -o %s -b y -cwd -V ''%s''', ...
            iNumJobs, ...
            strJobFolderName, ...
            strJobFolderName, ...
            strSubmitScriptFileName);  
  % Create a script called "resubmit" that can be used later
  % to resubmit all the qsub jobs, if needed.
  strCmdFileName = fullfile(strJobFolderName,'resubmit');
  hCmdFileID = fopen(strCmdFileName,'w');
  fprintf(hCmdFileID,'%s\n',strCmd);
  fclose(hCmdFileID);
  % Show the user the qsub command we're about to invoke.
  fprintf('%s\n',strCmd);
  % Invoke the qsub command.
  system(strCmd);
end

end
